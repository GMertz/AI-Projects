Additional Questions

1) How, if at all, is underfitting affected by the number of data points?

A larger dataset is (likely) going to require a more complicated implementation of the model - it is very unlikely, for example, for a dataset of thousands of points to be accurately interpreted by a first degree polynomial. 

2) How, if at all, is overfitting affected by the number of data points?

Conversely, a smaller dataset requires a simpler model - if there are only a handful of data points in the training set, and the model utilizes a high-degree polynomial, overfitting is very likely to occur, because there are more features than necessary given the amount of data. 

3) Explain your fourth plot qualitatively. What is the trend for the MSE on the training data? (For example, you might say something like, "It drops as the model degree increases to 4, stays level as the model degree increases to about 8, and then slowly increases.") How does the training MSE compare to the testing MSE?

The Mean Squared Error of the training data with 10 data points decreases as the model degree increases to 3, and decreases further as the degree increases to 5 and 7. Near 10, however, the MSE drops to 0. While this occurs, the MSE of the testing data skyrockets.This is happening because the training model is hitting every single data point and thus aggressively overfitting, so the model cannot account for the new data points introduced by the testing set. 

4) There are times when the testing error is lower than the training error. How do you explain this?

Because the testing set is smaller than the training set, it is entirely possible that through random chance the testing set could fit the model better than the training set. Cross validation can help mitigate this effect. 

5) Suppose you were asked to fit a polynomial to data that you knew were generated by another polynomial, but of unknown degree. How would you determine what degree of polynomial to use?

Testing multiple models with different degrees to focus in on the polynomial that best fits the data. Then you would select a model with the best performance on average. Trial and error by using mean squared error to select a model if done enough times should give you the degree of polynomial.
